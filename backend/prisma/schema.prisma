generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id         Int             @id @default(autoincrement())
  username   String          @unique
  requesting FriendRequest[] @relation("requesting")
  requests   FriendRequest[] @relation("requests")
  friend_of  Friendship[]    @relation("friend_of")
  friends    Friendship[]    @relation("friends")
  messages   Message[]
}

model Friendship {
  friend_id Int
  user_id   Int
  status    RelationshipStatus @default(FRIENDS)
  friend    User               @relation("friend_of", fields: [friend_id], references: [id])
  user      User               @relation("friends", fields: [user_id], references: [id])

  @@id([user_id, friend_id])
}

model FriendRequest {
  from_uid  Int
  to_uid    Int
  from_user User @relation("requesting", fields: [from_uid], references: [id])
  to_user   User @relation("requests", fields: [to_uid], references: [id])

  @@id([from_uid, to_uid])
}

model Message {
  id      Int      @id @default(autoincrement())
  message String
  date    DateTime @default(now())
  userId  Int
  room    String
  user    User     @relation(fields: [userId], references: [id])
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

enum RelationshipStatus {
  FRIENDS
  MUTED
  BLOCKED
}
